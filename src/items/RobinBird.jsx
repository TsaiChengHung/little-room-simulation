/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 robin_bird.glb --transform --simplify 
Files: robin_bird.glb [64.59MB] > C:\Users\User\Downloads\bird\robin_bird-transformed.glb [4.21MB] (93%)
*/
import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function RobinBird(props) {
  const group = useRef()
  const { scene, animations } = useGLTF('./robin_bird-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    // Assuming the idle animation is named 'Idle'
    // If it has a different name, replace 'Idle' with the correct name
    const idleAction = actions['Robin_Bird_Idle2']
    if (idleAction) {
      idleAction.reset().play()
      idleAction.loop = THREE.LoopRepeat
      idleAction.clampWhenFinished = false
      idleAction.timeScale = 0.5
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Mesh_RobinMiddlePoly_05" rotation={[Math.PI *1.5 , 0, 0]} scale={0.02}>
          <group name="Root_06" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Center_07_scaleCompensation" position={[0, 4.92, 0.17]}>
              <primitive object={nodes.Center_07} />
            </group>
          </group>
        </group>
        <skinnedMesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.Robin_Bird_Merge} skeleton={nodes.Object_6.skeleton} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/robin_bird-transformed.glb')
